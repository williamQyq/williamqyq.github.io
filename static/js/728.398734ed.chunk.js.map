{"version":3,"file":"static/js/728.398734ed.chunk.js","mappings":"qWAyBaA,EAAkB,WAC3B,MAAO,CACHC,KAAMC,EAAAA,GAEd,E,iCCTMC,EAAc,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAGhB,SAAAA,EAAYK,GAAgB,IAADC,EAIrB,OAJqBC,EAAAA,EAAAA,GAAA,KAAAP,IACvBM,EAAAH,EAAAK,KAAA,KAAMH,IACDI,MAAQ,CACTC,YAAaC,EAAAA,EAAAA,WACfL,CAEN,CAoCC,OApCAM,EAAAA,EAAAA,GAAAZ,EAAA,EAAAa,IAAA,oBAAAC,MAED,WAAqB,IAADC,EAAA,KACRC,EAAWC,KAAKC,QAAhBF,OACAN,EAAgBO,KAAKR,MAArBC,YACRO,KAAKZ,MAAMc,oBACPH,GAAUA,EAAOI,SACjBJ,EAAOK,KAAK,YAAD,oBACXL,EAAOM,GAAG,yBAAyB,WAC/BP,EAAKV,MAAMc,mBACf,IACAH,EAAOM,GAAGC,EAAAA,EAAAA,6BAA0C,SAACC,GACjDC,QAAQC,IAAIhB,EAAac,GACzBT,EAAKV,MAAMsB,yBAAyBjB,EACxC,IACAM,EAAOM,GAAGC,EAAAA,EAAAA,gCAA6C,SAACC,GACpDT,EAAKV,MAAMuB,sBAAsBlB,EACrC,IAER,GAAC,CAAAG,IAAA,uBAAAC,MACD,WACI,IAAQE,EAAWC,KAAKC,QAAhBF,OACJA,GAAQA,EAAOK,KAAK,cAAD,mBAC3B,GAAC,CAAAR,IAAA,SAAAC,MAED,WACI,IAAMU,EAA4B,CAC9BK,UAAWZ,KAAKR,MAAMC,YACtBoB,MAAOb,KAAKZ,MAAMyB,MAClBC,QAASd,KAAKZ,MAAM0B,SAExB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAC,UACVF,EAAAA,EAAAA,KAACG,EAAAA,IAAUC,EAAAA,EAAAA,GAAA,GAAKZ,KAG5B,KAACxB,CAAA,CA7Ce,CAASqC,EAAAA,WAAvBrC,EACKsC,YAAcC,EAAAA,EA+CzB,IAOMC,GAAYC,EAAAA,EAAAA,KAPM,SAAChC,GAAgB,MAAM,CAC3CqB,MAAOrB,EAAMiC,UAAUZ,MACvBa,WAAYlC,EAAMmC,KAAKD,WACvBZ,QAAStB,EAAMiC,UAAUX,QAC5B,GAG0C,CACvCZ,kBDpE6B,WAAH,sBAAA0B,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAC1B,SAAAC,EAAOC,EAAuBC,GAAyB,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnDL,EAASrD,KACT2D,EAAAA,EAAAA,IAA+B,2BAA2BC,EAAAA,EAAAA,IAAYN,IACjEO,MAAK,SAAAC,GAEF,IAAIC,EAAQC,OAAOC,OAAOH,EAAInC,MAAMuC,KAAI,SAAAnB,GAEpC,OADAA,EAAKoB,YAAcC,IAAOrB,EAAKoB,aAAaE,OAAO,uBAC5CtB,CACX,IACAM,EAAS,CACLpD,KAAMqE,EAAAA,GACNC,QAASR,GAEjB,IAAE,wBAAAP,EAAAgB,OAAA,GAAApB,EAAA,KACT,gBAAAqB,EAAAC,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,EAfyB,EAezB,ECsDD9C,yBAAAA,EAAAA,EACAC,sBAAAA,EAAAA,KAIJ,EAAeY,EAAUxC,E","sources":["redux/actions/microsoft.action.ts","pages/Bot/Microsoft.bot.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport Moment from 'moment';\r\nimport { GET_MS_ITEMS, ITEMS_LOADING_MS } from './types';\r\nimport { tokenConfig } from './authActions';\r\nimport { ThunkAction, AnyAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store/store';\r\nimport { AppDispatch, DealsDataSourceType } from '../interface';\r\n\r\nexport const getMicrosoftDeals = (): ThunkAction<void, RootState, any, AnyAction> =>\r\n    async (dispatch: AppDispatch, getState: () => RootState) => {\r\n        dispatch(setItemsLoading());\r\n        axios.get<DealsDataSourceType>('/api/microsoft/v1/deals', tokenConfig(getState))\r\n            .then(res => {\r\n                //modify created date time format in res.data\r\n                let deals = Object.values(res.data).map(item => {\r\n                    item.captureDate = Moment(item.captureDate).format(\"MM-DD-YYYY HH:mm:ss\");\r\n                    return item\r\n                })\r\n                dispatch({\r\n                    type: GET_MS_ITEMS,\r\n                    payload: deals\r\n                })\r\n            })\r\n    };\r\n\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING_MS\r\n    };\r\n};","import React from 'react';\r\nimport { ConnectedProps, connect } from 'react-redux';\r\nimport { SocketContext } from '@src/component/socket/SocketProvider';\r\nimport StoreTable, { DealsDataTableProps } from '@view/Bot/DealsTable';\r\nimport { storeType } from '@src/component/utils/cmpt.global';\r\nimport {\r\n    handlePriceCrawlError,\r\n    handlePriceCrawlFinished\r\n} from '@redux-action/deal.action';\r\nimport { getMicrosoftDeals } from '@redux-action/microsoft.action';\r\nimport { RootState } from '@src/redux/store/store';\r\nimport { SocketAction } from '@src/component/socket/type';\r\nimport { ContentLayout } from '@src/component/utils/Layout';\r\n\r\ninterface IProps extends PropsFromRedux {\r\n}\r\ninterface IState {\r\n    targetStore: string\r\n}\r\n\r\nclass MicrosoftDeals extends React.Component<IProps, IState> {\r\n    static contextType = SocketContext;\r\n    declare context: React.ContextType<typeof SocketContext>;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            targetStore: storeType.MICROSOFT\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { socket } = this.context!;\r\n        const { targetStore } = this.state;\r\n        this.props.getMicrosoftDeals();\r\n        if (socket && socket.active) {\r\n            socket.emit(`subscribe`, `StoreListingRoom`);\r\n            socket.on('Store Listings Update', () => {\r\n                this.props.getMicrosoftDeals();\r\n            })\r\n            socket.on(SocketAction.retrievedMSItemsOnlinePrice, (data) => {\r\n                console.log(targetStore, data);\r\n                this.props.handlePriceCrawlFinished(targetStore);\r\n            })\r\n            socket.on(SocketAction.retrievedMSItemsOnlinePriceErr, (data) => {\r\n                this.props.handlePriceCrawlError(targetStore);\r\n            })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { socket } = this.context!;\r\n        if (socket) socket.emit(`unsubscribe`, `StoreListingRoom`)\r\n    }\r\n\r\n    render() {\r\n        const data: DealsDataTableProps = {\r\n            storeName: this.state.targetStore,\r\n            items: this.props.items,\r\n            loading: this.props.loading\r\n        }\r\n        return (\r\n            <ContentLayout>\r\n                <StoreTable {...data} />\r\n            </ContentLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    items: state.microsoft.items,\r\n    tableState: state.item.tableState,\r\n    loading: state.microsoft.loading\r\n})\r\n\r\n\r\nconst connector = connect(mapStateToProps, {\r\n    getMicrosoftDeals,\r\n    handlePriceCrawlFinished,\r\n    handlePriceCrawlError\r\n});\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(MicrosoftDeals);"],"names":["setItemsLoading","type","ITEMS_LOADING_MS","MicrosoftDeals","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","targetStore","storeType","_createClass","key","value","_this2","socket","this","context","getMicrosoftDeals","active","emit","on","SocketAction","data","console","log","handlePriceCrawlFinished","handlePriceCrawlError","storeName","items","loading","_jsx","ContentLayout","children","StoreTable","_objectSpread","React","contextType","SocketContext","connector","connect","microsoft","tableState","item","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","getState","wrap","_context","prev","next","axios","tokenConfig","then","res","deals","Object","values","map","captureDate","Moment","format","GET_MS_ITEMS","payload","stop","_x","_x2","apply","arguments"],"sourceRoot":""}